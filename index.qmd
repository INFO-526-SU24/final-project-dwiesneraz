---
title: "Trash Wheel Collection Comparison"
subtitle: "INFO 526 - Summer 2024 - Final Project"
author: 
  - name: "Daniel Wiesner"
    affiliations:
      - name: "School of Information, University of Arizona"
description: "A comparison of the different categories of trash collected by four trash collection wheels in the Baltimore Harbor."
format:
   html:
    code-tools: true
    code-overflow: wrap
    embed-resources: true
editor: visual
execute:
  message: false
  warning: false
  echo: false
---

## Abstract

Add project abstract here.

## Setup

```{r setup}

# install and load packages

if (!require("pacman")) 
  install.packages("pacman")

pacman::p_load(tidyverse, 
               readr, 
               dplyr, 
               tidytuesdayR, 
               ggplot2, 
               psych,
               patchwork,
               RColorBrewer, 
               scales, 
               grid, 
               gridExtra, 
               geomtextpath, 
               ggrepel, 
               tigris, 
               mapproj, 
               sf, 
               geofacet, 
               glue, 
               ggrepel,
               readxl, 
               here, 
               stringr) 

# set theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 12))

# set figure parameters for knitr
knitr::opts_chunk$set(
  dpi = 300
)

```

## Data Summarization

```{r cache = TRUE}

# Load dataset

tuesdata <- tidytuesdayR::tt_load('2024-03-05')

wheels <- tuesdata$trashwheel

glimpse(wheels)

# get records since 2021 (all wheels active) 

wheels_contemp <- wheels %>%
  filter(Year >= 2021)

# number of dumpsters checked since 2021.
# very low for captain and professor

wheels_contemp %>%
  group_by(Name) %>%
  summarize(count = n())

# convert na's to 0. 
# (category not recorded for that wheel)

wheels_contemp[is.na(wheels_contemp)] <- 0

# get sums of each trash category 
# for each wheel

wheels_contemp <- wheels_contemp %>%
  group_by(Name) %>%
  summarize(
    PlasticBottles = sum(PlasticBottles),
    Polystyrene = sum(Polystyrene),
    CigaretteButts = sum(CigaretteButts),
    GlassBottles = sum(GlassBottles),
    PlasticBags = sum(PlasticBags),
    Wrappers = sum(Wrappers),
    SportsBalls = sum(SportsBalls)
  )

# get totals of all trash categories 
# for each wheel

wheels_contemp$Total <- rowSums(wheels_contemp[, c(2:8)]) 

# convert counts to proportions based 
# on total counts for each wheel

wheels_prop <- wheels_contemp %>%
  mutate(
    across(c(PlasticBottles:SportsBalls), 
           function(x) x / Total)
  )

# convert proportions to percentages
# for each wheel

wheels_perc <- wheels_prop %>%
  mutate(
    across(c(PlasticBottles:SportsBalls), 
           function(x) round(x * 100, 1))
  )

# remove Total column

wheels_perc <- wheels_perc %>%
  select(-Total)

wheels_perc

```

## Data Transformation / Formatting

```{r}

# pivot trash categories and their 
# proportions longer

wheels_long <- wheels_perc %>%
  pivot_longer(
    cols = c(PlasticBottles:SportsBalls),
    names_to = "Category", 
    values_to = "Proportion"
  )

# reformat Category strings for better 
# readability

wheels_long <- wheels_long %>%
  mutate(
    Category = 
      case_when(
        Category == "CigaretteButts" ~ "Cigarette Butts",
        Category == "PlasticBottles" ~ "Plastic Bottles",
        Category == "PlasticBags" ~ "Plastic Bags",
        Category == "GlassBottles" ~ "Glass Bottles",
        Category == "SportsBalls" ~ "Sports Balls",
        .default = Category
      )
  )

# order by proportion (descending)
# for each wheel

wheels_long <- wheels_long[
  order(wheels_long$Name, 
  -wheels_long$Proportion),
  ]

wheels_long

```

## Top Categories

```{r}

wheels_top <- wheels_long[c(1:5, 8:12, 
                            15:19, 22:26),]

#wheels_top <- wheels_top %>%
#  mutate(
#    Label = 
#      case_when(
#        Category
#      )
#  )

wheels_top

```

## Read and Prepare Data

```{r cache = TRUE}

baltimore <- read_sf(dsn = here("data", "tl_2019_24510_faces.shp"))

# crop Baltimore to only the harbor

harbor <- baltimore %>%
  st_crop(xmin = -76.64,
          xmax = -76.56,
          ymin = 39.24,
          ymax = 39.29)

# create tibble of points for trash
# wheel locations

# order: (Mr, Professor, Captain, Gwynnda)

wheel_points <- tibble(
  x = c(-76.6035, -76.5805, -76.595, -76.628),
  y = c(39.2825, 39.2795, 39.246, 39.2688),
  Name = c("Mister Trash Wheel",
           "Professor Trash Wheel",
           "Captain Trash Wheel",
           "Gwynnda Trash Wheel")
)

wheels_complete <- merge(wheels_top,
                         wheel_points,
                         by = "Name")

```

## Plot

```{r}
#| fig-width: 7
#| fig-height: 7

harbor %>%
  ggplot() +
  geom_sf(aes(fill = LWFLAG),   # Baltimore Harbor map
          alpha = 0.5, 
          show.legend = FALSE) +
  scale_fill_manual(values = c("tan3", "dodgerblue3")) +  # Land / Water colors
  geom_point(data = wheels_complete,
             aes(x = x, y = y),
             color = "red") #+
  #geom_label_repel(data = wheels_complete,
  #                 aes(x = x, y = y))

```


## References

`pivot_longer()` - <https://tidyr.tidyverse.org/reference/pivot_longer.html>

`ggplot2` timeline - <https://cran.r-project.org/web/packages/vistime/vignettes/gg_vistime-vignette.html>
                     <https://benalexkeen.com/creating-a-timeline-graphic-using-r-and-ggplot2/>
                     <https://r-graph-gallery.com/279-plotting-time-series-with-ggplot2.html>

Baltimore Harbor shapefile - <https://catalog.data.gov/dataset/tiger-line-shapefile-2019-county-baltimore-city-md-topological-faces-polygons-with-all-geocodes>

Trash wheel actual locations - Google Maps






















